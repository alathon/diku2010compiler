   0  $accept : %entry% $end

   1  Prog : FunDecs Exp EOF

   2  FunDecs : FUN ID COLON Type ARROW Type Match END FunDecs
   3          |

   4  Type : INT

   5  Pat : NUM
   6      | ID

   7  Match : Pat MATCHARROW Exp
   8        | Match BAR Match

   9  Exp : NUM
  10      | ID
  11      | Exp PLUS Exp
  12      | Exp MINUS Exp
  13      | ID Exp
  14      | READ
  15      | WRITE Exp
  16      | LPAR Exp RPAR

  17  %entry% : '\001' Prog

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . Prog  (17)
	FunDecs : .  (3)

	FUN  shift 3
	ID  reduce 3
	LPAR  reduce 3
	NUM  reduce 3
	READ  reduce 3
	WRITE  reduce 3

	Prog  goto 4
	FunDecs  goto 5


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	FunDecs : FUN . ID COLON Type ARROW Type Match END FunDecs  (2)

	ID  shift 6
	.  error


state 4
	%entry% : '\001' Prog .  (17)

	.  reduce 17


state 5
	Prog : FunDecs . Exp EOF  (1)

	ID  shift 7
	LPAR  shift 8
	NUM  shift 9
	READ  shift 10
	WRITE  shift 11
	.  error

	Exp  goto 12


state 6
	FunDecs : FUN ID . COLON Type ARROW Type Match END FunDecs  (2)

	COLON  shift 13
	.  error


state 7
	Exp : ID .  (10)
	Exp : ID . Exp  (13)

	ID  shift 7
	LPAR  shift 8
	NUM  shift 9
	READ  shift 10
	WRITE  shift 11
	BAR  reduce 10
	END  reduce 10
	EOF  reduce 10
	MINUS  reduce 10
	PLUS  reduce 10
	RPAR  reduce 10

	Exp  goto 14


state 8
	Exp : LPAR . Exp RPAR  (16)

	ID  shift 7
	LPAR  shift 8
	NUM  shift 9
	READ  shift 10
	WRITE  shift 11
	.  error

	Exp  goto 15


state 9
	Exp : NUM .  (9)

	.  reduce 9


state 10
	Exp : READ .  (14)

	.  reduce 14


state 11
	Exp : WRITE . Exp  (15)

	ID  shift 7
	LPAR  shift 8
	NUM  shift 9
	READ  shift 10
	WRITE  shift 11
	.  error

	Exp  goto 16


state 12
	Prog : FunDecs Exp . EOF  (1)
	Exp : Exp . PLUS Exp  (11)
	Exp : Exp . MINUS Exp  (12)

	EOF  shift 17
	MINUS  shift 18
	PLUS  shift 19
	.  error


state 13
	FunDecs : FUN ID COLON . Type ARROW Type Match END FunDecs  (2)

	INT  shift 20
	.  error

	Type  goto 21


state 14
	Exp : Exp . PLUS Exp  (11)
	Exp : Exp . MINUS Exp  (12)
	Exp : ID Exp .  (13)

	BAR  reduce 13
	END  reduce 13
	EOF  reduce 13
	MINUS  reduce 13
	PLUS  reduce 13
	RPAR  reduce 13


state 15
	Exp : Exp . PLUS Exp  (11)
	Exp : Exp . MINUS Exp  (12)
	Exp : LPAR Exp . RPAR  (16)

	MINUS  shift 18
	PLUS  shift 19
	RPAR  shift 22
	.  error


state 16
	Exp : Exp . PLUS Exp  (11)
	Exp : Exp . MINUS Exp  (12)
	Exp : WRITE Exp .  (15)

	BAR  reduce 15
	END  reduce 15
	EOF  reduce 15
	MINUS  reduce 15
	PLUS  reduce 15
	RPAR  reduce 15


state 17
	Prog : FunDecs Exp EOF .  (1)

	.  reduce 1


state 18
	Exp : Exp MINUS . Exp  (12)

	ID  shift 7
	LPAR  shift 8
	NUM  shift 9
	READ  shift 10
	WRITE  shift 11
	.  error

	Exp  goto 23


state 19
	Exp : Exp PLUS . Exp  (11)

	ID  shift 7
	LPAR  shift 8
	NUM  shift 9
	READ  shift 10
	WRITE  shift 11
	.  error

	Exp  goto 24


state 20
	Type : INT .  (4)

	.  reduce 4


state 21
	FunDecs : FUN ID COLON Type . ARROW Type Match END FunDecs  (2)

	ARROW  shift 25
	.  error


state 22
	Exp : LPAR Exp RPAR .  (16)

	.  reduce 16


state 23
	Exp : Exp . PLUS Exp  (11)
	Exp : Exp . MINUS Exp  (12)
	Exp : Exp MINUS Exp .  (12)

	BAR  reduce 12
	END  reduce 12
	EOF  reduce 12
	MINUS  reduce 12
	PLUS  reduce 12
	RPAR  reduce 12


state 24
	Exp : Exp . PLUS Exp  (11)
	Exp : Exp PLUS Exp .  (11)
	Exp : Exp . MINUS Exp  (12)

	BAR  reduce 11
	END  reduce 11
	EOF  reduce 11
	MINUS  reduce 11
	PLUS  reduce 11
	RPAR  reduce 11


state 25
	FunDecs : FUN ID COLON Type ARROW . Type Match END FunDecs  (2)

	INT  shift 20
	.  error

	Type  goto 26


state 26
	FunDecs : FUN ID COLON Type ARROW Type . Match END FunDecs  (2)

	ID  shift 27
	NUM  shift 28
	.  error

	Match  goto 29
	Pat  goto 30


state 27
	Pat : ID .  (6)

	.  reduce 6


state 28
	Pat : NUM .  (5)

	.  reduce 5


state 29
	FunDecs : FUN ID COLON Type ARROW Type Match . END FunDecs  (2)
	Match : Match . BAR Match  (8)

	BAR  shift 31
	END  shift 32
	.  error


state 30
	Match : Pat . MATCHARROW Exp  (7)

	MATCHARROW  shift 33
	.  error


state 31
	Match : Match BAR . Match  (8)

	ID  shift 27
	NUM  shift 28
	.  error

	Match  goto 34
	Pat  goto 30


state 32
	FunDecs : FUN ID COLON Type ARROW Type Match END . FunDecs  (2)
	FunDecs : .  (3)

	FUN  shift 3
	ID  reduce 3
	LPAR  reduce 3
	NUM  reduce 3
	READ  reduce 3
	WRITE  reduce 3

	FunDecs  goto 35


state 33
	Match : Pat MATCHARROW . Exp  (7)

	ID  shift 7
	LPAR  shift 8
	NUM  shift 9
	READ  shift 10
	WRITE  shift 11
	.  error

	Exp  goto 36


state 34
	Match : Match . BAR Match  (8)
	Match : Match BAR Match .  (8)

	BAR  shift 31
	END  reduce 8


state 35
	FunDecs : FUN ID COLON Type ARROW Type Match END FunDecs .  (2)

	.  reduce 2


state 36
	Match : Pat MATCHARROW Exp .  (7)
	Exp : Exp . PLUS Exp  (11)
	Exp : Exp . MINUS Exp  (12)

	MINUS  shift 18
	PLUS  shift 19
	BAR  reduce 7
	END  reduce 7


22 terminals, 8 nonterminals
18 grammar rules, 37 states
